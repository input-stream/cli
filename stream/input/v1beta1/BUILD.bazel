load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@build_stack_rules_proto//rules:proto_compiled_sources.bzl", "proto_compiled_sources")

proto_library(
    name = "v1beta1_proto",
    srcs = [
        "inputs.proto",
        "users.proto",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@protoapis//google/protobuf:any_proto",
        "@protoapis//google/protobuf:field_mask_proto",
        "@protoapis//google/protobuf:timestamp_proto",
    ],
)

go_library(
    name = "v1beta1",
    srcs = [
        "inputs.pb.go",
        "inputs_grpc.pb.go",
        "users.pb.go",
        "users_grpc.pb.go",
    ],
    importpath = "github.com/input-stream/cli/stream/input/v1beta1",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//runtime/protoimpl",
        "@protoapis//google/protobuf:any_go_proto",
        "@protoapis//google/protobuf:field_mask_go_proto",
        "@protoapis//google/protobuf:timestamp_go_proto",
    ],
)

proto_compiled_sources(
    name = "v1beta1_go_compiled_sources",
    srcs = [
        "inputs.pb.go",
        "inputs_grpc.pb.go",
        "users.pb.go",
        "users_grpc.pb.go",
    ],
    output_mappings = [
        "inputs.pb.go=github.com/input-stream/input/stream/v1beta1/inputs.pb.go",
        "inputs_grpc.pb.go=github.com/input-stream/input/stream/v1beta1/inputs_grpc.pb.go",
        "users.pb.go=github.com/input-stream/input/stream/v1beta1/users.pb.go",
        "users_grpc.pb.go=github.com/input-stream/input/stream/v1beta1/users_grpc.pb.go",
    ],
    plugins = [
        "@build_stack_rules_proto//plugin/golang/protobuf:protoc-gen-go",
        "@build_stack_rules_proto//plugin/grpc/grpc-go:protoc-gen-go-grpc",
    ],
    proto = "v1beta1_proto",
    visibility = ["//visibility:public"],
)
